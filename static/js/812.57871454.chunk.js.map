{"version":3,"file":"static/js/812.57871454.chunk.js","mappings":"oOAIe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBR,GACbS,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,QACvB,IACAL,MAAK,SAAAN,GACJC,EAAeD,EAAYY,SAC3BT,EAAU,WACX,IACAU,OAAM,SAAAC,GACLX,EAAU,WACX,GACJ,GAAE,CAACN,KAGF,2BACc,aAAXK,IACC,oEAGU,aAAXA,IACC,wBACGF,EAAYe,OAAS,EACpBf,EAAYgB,KAAI,SAAAC,GAAM,OACpB,2BACE,qCAAaA,EAAOC,WAEpB,uBAAID,EAAOE,YAHJF,EAAOG,GADI,KAQtB,oEAMX,C,uJClDD,IAAMC,EAAW,gCACXC,EAAU,mCAEHC,EAAY,SAAAC,GAEvB,OADiBC,MAAM,GAAD,OAAIJ,GAAJ,OAAeG,EAAf,oBAAkCF,GAEzD,EAEYI,EAAmB,SAAAC,GAI9B,OAHiBF,MAAM,GAAD,OACjBJ,EADiB,gCACeC,EADf,kBACgCK,GAGvD,EAEYC,EAAkB,SAAA/B,GAE7B,OADiB4B,MAAM,GAAD,OAAIJ,EAAJ,iBAAqBxB,EAArB,oBAAwCyB,GAE/D,EAEYO,EAAiB,SAAAhC,GAI5B,OAHiB4B,MAAM,GAAD,OACjBJ,EADiB,iBACAxB,EADA,4BAC2ByB,GAGlD,EAEYjB,EAAkB,SAAAR,GAI7B,OAHiB4B,MAAM,GAAD,OACjBJ,EADiB,iBACAxB,EADA,4BAC2ByB,GAGlD,C","sources":["components/Reviews/Reviews.jsx","services/movies-api.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from 'services/movies-api';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject('Error');\n      })\n      .then(reviewsInfo => {\n        setReviewsInfo(reviewsInfo.results);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'rejected' && (\n        <h1>Something went wrong. Please, try again</h1>\n      )}\n\n      {status === 'resolved' && (\n        <ul>\n          {reviewsInfo.length > 0 ? (\n            reviewsInfo.map(review => (\n              <li key={review.id}>\n                <h3>Author: {review.author}</h3>\n\n                <p>{review.content}</p>\n              </li>\n            ))\n          ) : (\n            <p>There are no reviews for this movie.</p>\n          )}\n        </ul>\n      )}\n    </div>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5e4720626ca4c6cc9f658e6222926a8a';\n\nexport const getMovies = request => {\n  const response = fetch(`${BASE_URL}${request}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMoviesByQuery = query => {\n  const response = fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n\nexport const getMovieDetails = movieId => {\n  const response = fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMovieActors = movieId => {\n  const response = fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieReviews = movieId => {\n  const response = fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["Reviews","movieId","useParams","useState","reviewsInfo","setReviewsInfo","status","setStatus","useEffect","getMovieReviews","then","response","ok","json","Promise","reject","results","catch","error","length","map","review","author","content","id","BASE_URL","API_KEY","getMovies","request","fetch","getMoviesByQuery","query","getMovieDetails","getMovieActors"],"sourceRoot":""}