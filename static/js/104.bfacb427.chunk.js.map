{"version":3,"file":"static/js/104.bfacb427.chunk.js","mappings":"4PAEaA,EAAYC,EAAAA,GAAAA,GAAH,2FAOTC,EAAWD,EAAAA,GAAAA,GAAH,yCAIRE,EAAOF,EAAAA,GAAAA,EAAH,6C,SCLF,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeR,GACZS,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,QACvB,IACAL,MAAK,SAAAN,GACJC,EAAcD,EAAWY,MACzBT,EAAU,WACX,IACAU,OAAM,SAAAC,GACLX,EAAU,WACX,GACJ,GAAE,CAACN,KAGF,2BACc,aAAXK,IACC,oEAGU,aAAXA,IACC,SAACV,EAAD,UACGQ,EAAWe,OAAS,EACnBf,EAAWgB,KAAI,SAAAC,GAAK,OAClB,UAACvB,EAAD,WACGuB,EAAMC,cACL,gBACEC,IAAG,UAtCL,uCAsCK,OAAiBF,EAAMC,cAC1BE,IAAKH,EAAMI,KACXC,MAAM,SAGR,gBAAKH,IAAKI,EAASH,IAAKH,EAAMI,KAAMC,MAAM,SAE5C,SAAC3B,EAAD,UAAOsB,EAAMI,OACZJ,EAAMO,WACL,uCAAeP,EAAMO,cAErB,uDAdWP,EAAMQ,GADH,KAoBpB,qFAMX,C,uJClED,IAAMC,EAAW,gCACXC,EAAU,mCAEHC,EAAY,SAAAC,GAEvB,OADiBC,MAAM,GAAD,OAAIJ,GAAJ,OAAeG,EAAf,oBAAkCF,GAEzD,EAEYI,EAAmB,SAAAC,GAI9B,OAHiBF,MAAM,GAAD,OACjBJ,EADiB,gCACeC,EADf,kBACgCK,GAGvD,EAEYC,EAAkB,SAAApC,GAE7B,OADiBiC,MAAM,GAAD,OAAIJ,EAAJ,iBAAqB7B,EAArB,oBAAwC8B,GAE/D,EAEYtB,EAAiB,SAAAR,GAI5B,OAHiBiC,MAAM,GAAD,OACjBJ,EADiB,iBACA7B,EADA,4BAC2B8B,GAGlD,EAEYO,EAAkB,SAAArC,GAI7B,OAHiBiC,MAAM,GAAD,OACjBJ,EADiB,iBACA7B,EADA,4BAC2B8B,GAGlD,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 16px;\n  padding: 0;\n`;\n\nexport const CastCard = styled.li`\n  width: 150px;\n`;\n\nexport const Name = styled.p`\n  font-weight: 500;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieActors } from 'services/movies-api';\nimport noPhoto from '../noPhoto.png';\nimport { CastCard, CastsList, Name } from './Cast.styled';\n\nconst posterWay = 'https://image.tmdb.org/t/p/original';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [actorsInfo, setActorsInfo] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    getMovieActors(movieId)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject('Error');\n      })\n      .then(actorsInfo => {\n        setActorsInfo(actorsInfo.cast);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'rejected' && (\n        <h1>Something went wrong. Please, try again</h1>\n      )}\n\n      {status === 'resolved' && (\n        <CastsList>\n          {actorsInfo.length > 0 ? (\n            actorsInfo.map(actor => (\n              <CastCard key={actor.id}>\n                {actor.profile_path ? (\n                  <img\n                    src={`${posterWay}${actor.profile_path}`}\n                    alt={actor.name}\n                    width=\"150\"\n                  />\n                ) : (\n                  <img src={noPhoto} alt={actor.name} width=\"150\" />\n                )}\n                <Name>{actor.name}</Name>\n                {actor.character ? (\n                  <p>Character: {actor.character}</p>\n                ) : (\n                  <p>Character: no information</p>\n                )}\n              </CastCard>\n            ))\n          ) : (\n            <p>There are no information about actors for this movie.</p>\n          )}\n        </CastsList>\n      )}\n    </div>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5e4720626ca4c6cc9f658e6222926a8a';\n\nexport const getMovies = request => {\n  const response = fetch(`${BASE_URL}${request}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMoviesByQuery = query => {\n  const response = fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n\nexport const getMovieDetails = movieId => {\n  const response = fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMovieActors = movieId => {\n  const response = fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieReviews = movieId => {\n  const response = fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["CastsList","styled","CastCard","Name","Cast","movieId","useParams","useState","actorsInfo","setActorsInfo","status","setStatus","useEffect","getMovieActors","then","response","ok","json","Promise","reject","cast","catch","error","length","map","actor","profile_path","src","alt","name","width","noPhoto","character","id","BASE_URL","API_KEY","getMovies","request","fetch","getMoviesByQuery","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}