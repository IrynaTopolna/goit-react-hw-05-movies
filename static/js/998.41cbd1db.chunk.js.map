{"version":3,"file":"static/js/998.41cbd1db.chunk.js","mappings":"sRAIaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,uRAgBVE,EAAMF,EAAAA,GAAAA,IAAH,8DAKHG,GAAcH,EAAAA,EAAAA,IAAOI,EAAAA,IAAPJ,CAAH,sFAMXK,EAAYL,EAAAA,GAAAA,IAAH,wD,SCrBP,SAASM,IAAa,IAAD,IAC1BC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAEnD,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WACRD,EAAU,YAEVE,EAAAA,EAAAA,IAAgBd,GACbe,MAAK,SAAAC,GACJ,OAAIA,EAASC,GACJD,EAASE,OAGXC,QAAQC,OAAO,QACvB,IACAL,MAAK,SAAAN,GACJC,EAASD,GACTG,EAAU,WACX,IACAS,OAAM,SAAAC,GACLV,EAAU,WACX,GACJ,GAAE,CAACZ,KAGF,2BACc,YAAXW,IACC,SAAC,KAAD,CACEY,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,IAGD,aAAXhB,IACC,oEAEU,aAAXA,IACC,iCACE,UAACnB,EAAD,CAAYoC,GAAIxB,EAAYyB,QAA5B,WACE,SAACjC,EAAD,KACA,0CAGF,UAACE,EAAD,WACGW,EAAMqB,aACL,SAACnC,EAAD,CACEoC,IAAG,UAtDD,wCAsDC,OAAiBtB,EAAMqB,aAC1BE,IAAKvB,EAAMwB,MACXP,MAAM,SAGR,SAAC/B,EAAD,CAAKoC,IAAKG,EAAUF,IAAKvB,EAAMwB,SAGjC,4BACE,wBAAKxB,EAAMwB,QACVxB,EAAM0B,cACL,0CAAkB1B,EAAM0B,iBAExB,yDAEF,qCACC1B,EAAM2B,UAAW,uBAAI3B,EAAM2B,YAAgB,wCAE5C,mCACC3B,EAAM4B,OAAOC,OAAS,GACrB,uBAAI7B,EAAM4B,OAAOE,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,SAE/C,iDAKN,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMd,GAAG,OAAT,sBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAe,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAMX,C,uJCzGD,IAAMC,EAAW,gCACXC,EAAU,mCAEHC,EAAY,SAAAC,GAEvB,OADiBC,MAAM,GAAD,OAAIJ,GAAJ,OAAeG,EAAf,oBAAkCF,GAEzD,EAEYI,EAAmB,SAAAC,GAI9B,OAHiBF,MAAM,GAAD,OACjBJ,EADiB,gCACeC,EADf,kBACgCK,GAGvD,EAEYrC,EAAkB,SAAAd,GAE7B,OADiBiD,MAAM,GAAD,OAAIJ,EAAJ,iBAAqB7C,EAArB,oBAAwC8C,GAE/D,EAEYM,EAAiB,SAAApD,GAI5B,OAHiBiD,MAAM,GAAD,OACjBJ,EADiB,iBACA7C,EADA,4BAC2B8C,GAGlD,EAEYO,EAAkB,SAAArD,GAI7B,OAHiBiD,MAAM,GAAD,OACjBJ,EADiB,iBACA7C,EADA,4BAC2B8C,GAGlD,C","sources":["components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","services/movies-api.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport { IoArrowUndoSharp } from 'react-icons/io5';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  width: 130px;\n  border: 1px solid orange;\n  border-radius: 4px;\n  padding: 8px 16px;\n  cursor: pointer;\n  font-weight: bold;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: orange;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n  margin-top: 20px;\n`;\n\nexport const ArrowStyled = styled(IoArrowUndoSharp)`\n  margin-right: 12px;\n  width: 24px;\n  fill: currentColor;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  gap: 16px;\n`;\n","import { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useState, useEffect, useRef, Suspense } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport noPoster from '../noPoster.png';\nimport { getMovieDetails } from 'services/movies-api';\nimport { ArrowStyled, Img, MovieInfo, StyledLink } from './MovieDetails.styled';\n// import { IoArrowUndoSharp } from 'react-icons/io5';\n\nconst posterWay = 'https://image.tmdb.org/t/p/original/';\n\nexport default function MovieCard() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  const [movie, setMovie] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    setStatus('pending');\n\n    getMovieDetails(movieId)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        return Promise.reject('Error');\n      })\n      .then(movie => {\n        setMovie(movie);\n        setStatus('resolved');\n      })\n      .catch(error => {\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      {status === 'pending' && (\n        <RotatingLines\n          strokeColor=\"#F9721F\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"150\"\n          visible={true}\n        />\n      )}\n      {status === 'rejected' && (\n        <h1>Something went wrong. Please, try again</h1>\n      )}\n      {status === 'resolved' && (\n        <>\n          <StyledLink to={backLinkRef.current}>\n            <ArrowStyled />\n            <span>Go back</span>\n          </StyledLink>\n\n          <MovieInfo>\n            {movie.poster_path ? (\n              <Img\n                src={`${posterWay}${movie.poster_path}`}\n                alt={movie.title}\n                width=\"142\"\n              />\n            ) : (\n              <Img src={noPoster} alt={movie.title} />\n            )}\n\n            <div>\n              <h2>{movie.title}</h2>\n              {movie.release_date ? (\n                <p>Release date: {movie.release_date}</p>\n              ) : (\n                <p>Release date: no information</p>\n              )}\n              <h3>Overwiev</h3>\n              {movie.overview ? <p>{movie.overview}</p> : <p>No overview</p>}\n\n              <h3>Genres</h3>\n              {movie.genres.length > 0 ? (\n                <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n              ) : (\n                <p>No information</p>\n              )}\n            </div>\n          </MovieInfo>\n\n          <h3>Additional information</h3>\n          <ul>\n            <li>\n              <Link to=\"cast\">Casts</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </div>\n  );\n}\n","const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '5e4720626ca4c6cc9f658e6222926a8a';\n\nexport const getMovies = request => {\n  const response = fetch(`${BASE_URL}${request}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMoviesByQuery = query => {\n  const response = fetch(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response;\n};\n\nexport const getMovieDetails = movieId => {\n  const response = fetch(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}`);\n  return response;\n};\n\nexport const getMovieActors = movieId => {\n  const response = fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response;\n};\n\nexport const getMovieReviews = movieId => {\n  const response = fetch(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response;\n};\n"],"names":["StyledLink","styled","Link","Img","ArrowStyled","IoArrowUndoSharp","MovieInfo","MovieCard","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useState","movie","setMovie","status","setStatus","useEffect","getMovieDetails","then","response","ok","json","Promise","reject","catch","error","strokeColor","strokeWidth","animationDuration","width","visible","to","current","poster_path","src","alt","title","noPoster","release_date","overview","genres","length","map","genre","name","join","Suspense","fallback","BASE_URL","API_KEY","getMovies","request","fetch","getMoviesByQuery","query","getMovieActors","getMovieReviews"],"sourceRoot":""}